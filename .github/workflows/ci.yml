name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Create Docker image
        working-directory: brokerX
        run: |
          docker compose down -v
          docker network create brokerX-network
          docker compose build

      - name: Start docker containers
        working-directory: brokerX
        run: docker compose up -d

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Linting
        run: |
          black --check .

      - name: Run Tests
        env:
          PYTHONPATH: ./brokerX
          DB_NAME: brokerX_db
          DB_USER: user
          DB_PASSWORD: pass
          DB_HOST: mysql
          DB_PORT: 3306
        working-directory: brokerX
        run: |
          docker compose exec -T broker_app python -m pytest --cov=broker --cov-config=.coveragerc --cov-report=xml:coverage.xml
          docker cp $(docker ps -qf "name=broker_app"):/app/coverage.xml ./coverage.xml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: brokerX/coverage.xml

      - name: Close docker
        if: always()
        working-directory: brokerX
        run: |
          docker compose down -v
          docker system prune -af --volumes