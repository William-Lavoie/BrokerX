from abc import abstractmethod
from models import User


class UserOTPDAO:

    @abstractmethod
    def set_secret_key(self, user: User, secret: str):
        pass

    @abstractmethod
    def get_secret_key(self, email: str):
        pass

    # TODO: use a database constraint instead?
    @abstractmethod
    def delete_passcode(self, email: str) -> bool:
        """Expire a passcode after 3 attemps, 10 mins or upon validation to prevent brute-forcing"""
        pass

    @abstractmethod
    def increment_attempts(self, email: str) -> bool:
        pass
