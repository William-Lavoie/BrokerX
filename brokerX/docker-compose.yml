services:
  broker-app:
    container_name: broker-app
    build: .
    volumes:
      - .:/app
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: brokerX_db
      DJANGO_SETTINGS_MODULE: brokerX.settings
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      mysql:
        condition: service_healthy
    entrypoint: ["python", "entrypoint.py"]
    networks:
      - broker-network

  mysql:
    image: mysql:8
    container_name: broker_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: brokerX_db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - broker-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - broker-app
    networks:
      - broker-network

networks:
  broker-network:
    driver: bridge
    external: true

volumes:
  mysql_data:
  prometheus_data:

