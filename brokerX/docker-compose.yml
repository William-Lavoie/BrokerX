services:
  broker-app:
    build: .
    volumes:
      - .:/app
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: brokerX_db
      DJANGO_SETTINGS_MODULE: brokerX.settings
    expose:
      - "8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: ["python", "entrypoint.py"]
    networks:
      - broker-network

  mysql:
    image: mysql:8
    container_name: broker_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: brokerX_db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - broker-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - broker-app
    networks:
      - broker-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 5s
      timeout: 3s
      retries: 5

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '9000:9000'
    networks:
      - broker-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=9000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      prometheus:
        condition: service_healthy

  k6:
    image: grafana/k6
    container_name: k6
    entrypoint: ["sleep", "infinity"]
    volumes:
      - ./k6:/scripts
    networks:
      - broker-network

  redis:
    container_name: redis
    image: redis:7
    restart: unless-stopped
    networks:
      - broker-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - broker-app
    networks:
      - broker-network


networks:
  broker-network:
    driver: bridge
    external: true

volumes:
  mysql_data:
  prometheus_data:
  grafana-data:

